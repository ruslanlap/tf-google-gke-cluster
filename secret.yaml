name: Encrypt Secret Manifest
on:
  push:
    branches:
      - main

jobs:
  encrypt:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install GCP CLI
        run: |
          curl https://sdk.cloud.google.com | bash > /dev/null
          source $HOME/google-cloud-sdk/path.bash.inc

      - name: Authenticate with GCP
        env:
          GCP_PROJECT_ID: your-project-id
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
        run: |
          echo $GCP_SA_KEY | base64 --decode > /tmp/gcp_sa_key.json
          gcloud auth activate-service-account --key-file=/tmp/gcp_sa_key.json --project=$GCP_PROJECT_ID

      - name: Generate Secret Manifest
        env:
          TELE_TOKEN: ${{ secrets.TELE_TOKEN }}
        run: |
          echo "apiVersion: v1" > secret.yaml
          echo "data:" >> secret.yaml
          echo "  token: $(echo -n $TELE_TOKEN | base64)" >> secret.yaml

      - name: Encrypt and Upload Secret
        env:
          GCP_PROJECT_ID: your-project-id
          GCP_SECRET_NAME: tele-token
        run: |
          gcloud secrets create $GCP_SECRET_NAME --project=$GCP_PROJECT_ID --data-file=secret.yaml

      - name: Cleanup Secret Manifest
        run: |
          rm secret.yaml

      - name: Set Encrypted Manifest Output
        id: set-output
        run: |
          echo "::set-output name=encrypted_manifest::${{ steps.encrypt.outputs.GCP_SECRET_NAME }}"

      - name: Set Secret Manager Secret Name
        run: |
          echo "::set-secret name=TELE_TOKEN_SECRET::${{ steps.encrypt.outputs.GCP_SECRET_NAME }}"
